/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include "am335x-bone-common.dtsi"

/ {
	model = "TI AM335x BeagleBone Black";
	compatible = "ti,am335x-bone-black", "ti,am335x-bone", "ti,am33xx";
};

/* Max Core Speed */
#include "am335x-boneblack-1ghz.dtsi"
/* #include "am335x-boneblack-800mhz.dtsi" */

&ldo3_reg {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
};

&mmc1 {
	vmmc-supply = <&vmmcsd_fixed>;
};

&am33xx_pinmux {
	pinctrl-names = "default";
	pinctrl-0 = <&clkout2_pin>;
};

#include "am335x-peripheral-emmc.dtsi"
#include "am335x-bone-pinmux-emmc.dtsi"
/* #include "am335x-bone-emmc-in-reset.dtsi" */

#include "am335x-peripheral-nxp-hdmi.dtsi"
#include "am335x-bone-pinmux-nxp-hdmi.dtsi"

&rtc {
	system-power-controller;
};

/* #include "am335x-peripheral-can0.dtsi" */
/* #include "am335x-bone-pinmux-can0.dtsi" */

/* #include "am335x-peripheral-can1.dtsi" */
/* #include "am335x-bone-pinmux-can1.dtsi" */

/* #include "am335x-peripheral-ttyO1.dtsi" */
/* #include "am335x-bone-pinmux-ttyO1.dtsi" */

/* #include "am335x-peripheral-ttyO2.dtsi" */
/* #include "am335x-bone-pinmux-ttyO2.dtsi" */

/* #include "am335x-peripheral-ttyO4.dtsi" */
/* #include "am335x-bone-pinmux-ttyO4.dtsi" */

/* #include "am335x-peripheral-ttyO5.dtsi" */
/* #include "am335x-bone-pinmux-ttyO5.dtsi" */


&i2c0 {
        eeprom: eeprom@50 {
                compatible = "at,24c256";
                reg = <0x50>;
        };
};



&am33xx_pinmux {
	bone_replicape_spi1_pins: pinmux_replicape_spi1_pins {
                pinctrl-single,pins = <
                        0x190 0x13      /* P9_31 = mcasp0_aclkx.spi1_sclk                                , OUTPUT_PULLUP | MODE3 */
                        0x194 0x33      /* P9_29 = mcasp0_fsx.spi1_d0                                    , INPUT_PULLUP  | MODE3 */
                        0x198 0x13      /* P9_30 = mcasp0_axr0.spi1_d1                                   , OUTPUT_PULLUP | MODE3 */
                        0x19c 0x13      /* P9_28 = mcasp0_ahclkr.spi1_cs0                                , OUTPUT_PULLUP | MODE3 */
                        0x164 0x12  /* P9_42 = GPIO0_7 =  eCAP0_in_PWM0_out.gpio0[7] , OUTPUT_PULLUP | MODE2 */
                >;
        };
	pruicss_stepper_pins: pinmux_pruicss_stepper_pins{
                pinctrl-single,pins = <
                        0x038 0x07 // P8_16 (3)  = DIR_EXT_2    = GPIO1_14
                        0x03C 0x07 // P8_15 (4)  = DIR_EXT_1    = GPIO1_15
                        0x028 0x07 // P8_14 (5)  = DIR_Z                = GPIO0_26
                        0x02C 0x07 // P8_17 (6)  = STEP_X               = GPIO0_27
                        0x034 0x07 // P8_11 (22) = step_ext_2   = GPIO1_13
                        0x030 0x07 // P8_12 (23) = Step_y               = GPIO1_12
                        0x024 0x07 // P8_13 (24) = Step_z               = GPIO0_23
                        0x020 0x07 // P8_19 (25) = Dir_y                = GPIO0_22
                        0x07C 0x07 // P8_26      = Dir_x                = GPIO1_29
                        0x078 0x07 // P9_12      = step ext 1   = GPIO1_28
                >;
        };

        stepper_fault_pins: pinmux_stepper_fault_pins{
                pinctrl-single,pins = <
                        0x094 0x37 // P8_8  = Fault Ext 2       = GPIO2_3    gpmc_oen_ren.gpio2[3]
                        0x09C 0x37 // P8_9  = FAYLT Y           = GPIO2_5
                        0x098 0x37 // P8_10 = FAULT X           = GPIO2_4    gpmc_wen.gpio2[4]
                        0x08C 0x37 // P8_18 = Fault_ext 1       = GPIO2_1
                        0x184 0x37 // P9_24 = Fault Z           = GPIO0_15
                >;
        };

        end_stop_pins: pinmux_end_stop_pins{
                pinctrl-single,pins = <
                        0x1AC 0x37 // P9_25 = End stop X1  = GPIO3_21
                        0x070 0x37 // P9_11 = End stop X2  = GPIO0_30
                        0x044 0x37 // P9_23 = End stop Y1  = GPIO1_17
                        0x04C 0x37 // P9_16 = End stop Y2  = GPIO1_19
                        0x074 0x37 // P9_13 = End stop Z1  = GPIO0_31
                        0x158 0x37 // P9_18 = End stop Z2  = GPIO0_4
                >;
        };
        dallas_w1_pins: pinmux_dallas_w1_pins {
                pinctrl-single,pins = <
                                0x150 0x37      // Dallas 1W
                >;
        };
};

&spi1 {
        #address-cells  = <1>;
        #size-cells     = <0>;
        status                  = "okay";
        pinctrl-names   = "default";
        pinctrl-0               = <&bone_replicape_spi1_pins>;
        cs-gpios                = <&gpio3 17 0>, <&gpio0 7 0>;

        stepper_control{
                #address-cells    = <1>;
                #size-cells       = <0>;
                compatible                = "spidev";
                reg                       = <0>;
                spi-max-frequency = <16000000>;
                spi-cpha;                 // Stepper control has mode 1 (CPOL = 0, CPHA = 1)
        };

        stepper_current{
                #address-cells    = <1>;
                #size-cells       = <0>;
                compatible                = "spidev";
                reg                       = <1>;
                spi-max-frequency = <16000000>;
                // Stepper current has mode 0 (CPOL = 0, CPHA = 0)
        };
};


#include "am335x-bone-i2c2-cape-eeprom.dtsi"


/* Touch Screen (stolen from Pepper) */
&tscadc {
	status = "okay";
	adc {
		ti,adc-channels = <4 5 6 7>;
	};
};


/*&pruss {
        status = "okay";
        pinctrl-names = "default";
        pinctrl-0         = <&pruicss_stepper_pins>;

        stepper_x{
                pin-names       = "Replic:pru-step_x", "Replic:pru-dir_x";
                gpios           = <&gpio1 27 0
                                           &gpio2 29 0>;
        };
        stepper_y{
                pin-names       = "Replic:pru-step_y", "Replic:pru-dir_y";
                gpios           =<&gpio2 12 0
                                          &gpio1 22 0>;
        };
        stepper_z{
                pin-names       = "Replic:pru-step_z", "Replic:pru-dir_z";
                gpios           = <&gpio1 23 0
                                           &gpio1 26 0>;
        };
        stepper_ext_1{
                pin-names       = "Replic:pru-step_ext_1", "Replic:pru-dir_ext_1";
                gpios           = <&gpio2 28 0
                                           &gpio2 15 0>;
        };
        stepper_ext_2{
                pin-names       = "Replic:pru-step_ext_2", "Replic:pru-dir_ext_2";
                gpios           = <&gpio2 13 0
                                           &gpio2 14 0>;
        };
};*/

